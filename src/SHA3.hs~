module SHA3 where

import qualified Data.Array.Repa as R
import Data.Array.Repa hiding (map,zip,foldr)

type StateString = Array U DIM1 Bool
type StateArray  = Array U DIM3 Bool

log2Int :: Int -> Int
log2Int d  = log2Int' d 0
  where
    log2Int' 0 t = t
    log2Int' d t = log2Int' (d `div` 2) (t+1)

stringToArray :: StateString -> Int -> StateArray
stringToArray sstring w = computeS $ reshape (Z:.5:.5:.w) sstring

arrayToString :: StateArray -> Int -> StateString
arrayToString sarray w = computeS $ reshape (Z :. 5*5*w) sarray 


testString :: Array U DIM1 Int
testString = fromListUnboxed (Z :. 50) [0..49]

testArray :: Array U DIM3 Int
testArray = computeS $ reshape (Z :. 5 :. 5 :. 2) testString


sanityCheck :: Int -> Int -> Int -> Int -> Bool
sanityCheck x y z w = (testArray ! i1) == (testString ! i2)
  where
    i1 = (Z :. x :. y :. z)
    i2 = (Z :. w*(5*x + y) + z)


lane :: Array U DIM3 Int -> Int -> Int -> Array U DIM1 Int
lane sarray i j = computeS $ slice sarray (Any :. i :. j :. All)

